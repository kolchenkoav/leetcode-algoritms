package algoritms;

/**
 * https://leetcode.com/problems/integer-to-roman/
 * 12. Integer to Roman
 *
 * * values и symbols - это массивы, которые хранят значения римских чисел и соответствующие им символы.
 * * Функция intToRoman проходит по каждому значению в массиве values, начиная с самого большого значения.
 *      Для каждого значения она вычитает значение из num столько раз, сколько это возможно,
 *      и добавляет соответствующий символ в результат.
 * * Этот процесс продолжается до тех пор, пока num не станет равным 0, после чего мы находим
 *      римское представление входного числа. Результат возвращается в виде строки.
 * Таким образом, этот код использует жадный подход, чтобы преобразовать входное число в римское число.
 *      Он начинает с самого большого римского числа и вычитает его из входного числа столько раз, сколько это возможно,
 *      затем переходит к следующему по величине римскому числу и так далее, пока входное число не станет равным нулю.
 *
 * В результате получается римское представление входного числа.
 *
 */
public class IntegerToRoman {
    private static final int[] values = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};
    private static final String[] symbols = {"M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"};

    public static String intToRoman(int num) {
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < values.length && num >= 0; i++) {
            while (values[i] <= num) {
                num -= values[i];
                sb.append(symbols[i]);
            }
        }
        return sb.toString();
    }
}
